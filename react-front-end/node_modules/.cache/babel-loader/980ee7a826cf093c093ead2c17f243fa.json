{"ast":null,"code":"var _jsxFileName = \"/Users/MPB/repos/CS545/Assignments/react-front-end/src/components/Dashboard.js\";\nimport React, { useState, Component } from \"react\";\nimport Posts from \"../components/Posts\";\nimport useFetch from \"../customHooks/useFetch\";\nimport PostDetails from \"./PostDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  render() {\n    const uri = \"http://localhost:3000/posts\";\n    const {\n      data: posts,\n      isPending,\n      error\n    } = useFetch(uri);\n    console.log(\"dashboard has run\");\n    const [selectedPost, setSelectedPost] = useState(-1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 23\n      }, this), posts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), console.log(\"posts\"), selectedPost >= 0 && /*#__PURE__*/_jsxDEV(PostDetails, {\n        post: posts.filter(each => each.id === selectedPost)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/MPB/repos/CS545/Assignments/react-front-end/src/components/Dashboard.js"],"names":["React","useState","Component","Posts","useFetch","PostDetails","Dashboard","render","uri","data","posts","isPending","error","console","log","selectedPost","setSelectedPost","filter","each","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,6BAAZ;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAEC,KAAR;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA;AAA1B,QAAoCR,QAAQ,CAACI,GAAD,CAAlD;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,CAAC,CAAF,CAAhD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGU,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB,EAGGD,KAAK,iBACJ;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ,EASGG,OAAO,CAACC,GAAR,CAAY,OAAZ,CATH,EAUGC,YAAY,IAAI,CAAhB,iBACC,QAAC,WAAD;AACE,QAAA,IAAI,EAAEL,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,YAAnC;AADR;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAzB+B;;AA4BlC,eAAeT,SAAf","sourcesContent":["import React, { useState, Component } from \"react\";\nimport Posts from \"../components/Posts\";\nimport useFetch from \"../customHooks/useFetch\";\nimport PostDetails from \"./PostDetails\";\n\nclass Dashboard extends Component {\n  render() {\n    const uri = \"http://localhost:3000/posts\";\n    const { data: posts, isPending, error } = useFetch(uri);\n    console.log(\"dashboard has run\");\n    const [selectedPost, setSelectedPost] = useState(-1);\n\n    return (\n      <div className=\"dashboard\">\n        <h2>Dashboard</h2>\n        {isPending && <h1>Loading....</h1>}\n        {posts && (\n          <div className=\"posts\">\n            <Posts posts={posts} />\n          </div>\n        )}\n\n        {console.log(\"posts\")}\n        {selectedPost >= 0 && (\n          <PostDetails\n            post={posts.filter((each) => each.id === selectedPost)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}