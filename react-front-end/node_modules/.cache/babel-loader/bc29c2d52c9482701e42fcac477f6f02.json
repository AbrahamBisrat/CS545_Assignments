{"ast":null,"code":"var _jsxFileName = \"/Users/MPB/repos/CS545/Assignments/react-front-end/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport Post from \"./Post\";\nimport PostDetails from \"./PostDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext(null);\nexport default function Posts(refreshFlag) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(\"\");\n\n  const updateSelected = selected => selectedPost(selected);\n\n  const [refresh, setRefresh] = useState(null);\n  useEffect(() => {\n    axios.get(\"/posts\").then(res => {\n      setPosts(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [refresh, refreshFlag]);\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      selectedPost,\n      setSelectedPost,\n      setRefresh\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [posts.map((post, key) => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), selectedPost && /*#__PURE__*/_jsxDEV(PostDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"q7qJtyVfVDPVOolqbkbz412pxhs=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/MPB/repos/CS545/Assignments/react-front-end/src/components/Posts.js"],"names":["axios","React","useState","useEffect","createContext","Post","PostDetails","PostContext","Posts","refreshFlag","posts","setPosts","selectedPost","setSelectedPost","updateSelected","selected","refresh","setRefresh","get","then","res","data","catch","err","console","log","map","post","key","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,eAAe,SAASI,KAAT,CAAeC,WAAf,EAA4B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMY,cAAc,GAAIC,QAAD,IAAcH,YAAY,CAACG,QAAD,CAAjD;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CACFkB,GADH,CACO,QADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAACS,GAAG,CAACC,IAAL,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAACP,OAAD,EAAUP,WAAV,CATM,CAAT;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,YAAF;AAAgBC,MAAAA,eAAhB;AAAiCI,MAAAA;AAAjC,KAA7B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGP,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBACT,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAED;AAA1B,SAAWA,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAIGjB,YAAY,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3BuBJ,K;;KAAAA,K","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport Post from \"./Post\";\nimport PostDetails from \"./PostDetails\";\n\nexport const PostContext = createContext(null);\n\nexport default function Posts(refreshFlag) {\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(\"\");\n  const updateSelected = (selected) => selectedPost(selected);\n  const [refresh, setRefresh] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"/posts\")\n      .then((res) => {\n        setPosts(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [refresh, refreshFlag]);\n\n  return (\n    <PostContext.Provider value={{ selectedPost, setSelectedPost, setRefresh }}>\n      <div className=\"posts\">\n        {posts.map((post, key) => (\n          <Post key={post.id} post={post} />\n        ))}\n        {selectedPost && <PostDetails />}\n      </div>\n    </PostContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}